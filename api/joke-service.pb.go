// Code generated by protoc-gen-go. DO NOT EDIT.
// source: joke-service.proto

package proto3

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type JokeRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JokeRequest) Reset()         { *m = JokeRequest{} }
func (m *JokeRequest) String() string { return proto.CompactTextString(m) }
func (*JokeRequest) ProtoMessage()    {}
func (*JokeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b3bc6c7af4464e26, []int{0}
}

func (m *JokeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JokeRequest.Unmarshal(m, b)
}
func (m *JokeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JokeRequest.Marshal(b, m, deterministic)
}
func (m *JokeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JokeRequest.Merge(m, src)
}
func (m *JokeRequest) XXX_Size() int {
	return xxx_messageInfo_JokeRequest.Size(m)
}
func (m *JokeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JokeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JokeRequest proto.InternalMessageInfo

func (m *JokeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type JokeReponse struct {
	Joke                 string   `protobuf:"bytes,1,opt,name=joke,proto3" json:"joke,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JokeReponse) Reset()         { *m = JokeReponse{} }
func (m *JokeReponse) String() string { return proto.CompactTextString(m) }
func (*JokeReponse) ProtoMessage()    {}
func (*JokeReponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b3bc6c7af4464e26, []int{1}
}

func (m *JokeReponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JokeReponse.Unmarshal(m, b)
}
func (m *JokeReponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JokeReponse.Marshal(b, m, deterministic)
}
func (m *JokeReponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JokeReponse.Merge(m, src)
}
func (m *JokeReponse) XXX_Size() int {
	return xxx_messageInfo_JokeReponse.Size(m)
}
func (m *JokeReponse) XXX_DiscardUnknown() {
	xxx_messageInfo_JokeReponse.DiscardUnknown(m)
}

var xxx_messageInfo_JokeReponse proto.InternalMessageInfo

func (m *JokeReponse) GetJoke() string {
	if m != nil {
		return m.Joke
	}
	return ""
}

func init() {
	proto.RegisterType((*JokeRequest)(nil), "proto3.JokeRequest")
	proto.RegisterType((*JokeReponse)(nil), "proto3.JokeReponse")
}

func init() { proto.RegisterFile("joke-service.proto", fileDescriptor_b3bc6c7af4464e26) }

var fileDescriptor_b3bc6c7af4464e26 = []byte{
	// 131 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xca, 0xca, 0xcf, 0x4e,
	0xd5, 0x2d, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0x03, 0x53, 0xc6, 0x4a, 0x8a, 0x5c, 0xdc, 0x5e, 0xf9, 0xd9, 0xa9, 0x41, 0xa9, 0x85, 0xa5, 0xa9,
	0xc5, 0x25, 0x42, 0x42, 0x5c, 0x2c, 0x79, 0x89, 0xb9, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c,
	0x41, 0x60, 0x36, 0x42, 0x49, 0x41, 0x7e, 0x5e, 0x71, 0x2a, 0x48, 0x09, 0xc8, 0x3c, 0x98, 0x12,
	0x10, 0xdb, 0xc8, 0x85, 0x8b, 0x17, 0xa2, 0xa4, 0xb8, 0x20, 0x3f, 0x2f, 0x25, 0xb5, 0x48, 0xc8,
	0x98, 0x8b, 0x1d, 0xca, 0x11, 0x12, 0x86, 0xd8, 0x68, 0xac, 0x87, 0x64, 0x8f, 0x14, 0x9a, 0x20,
	0xd8, 0xe4, 0x24, 0xa8, 0x9b, 0x00, 0x01, 0x00, 0x00, 0xff, 0xff, 0x72, 0x06, 0xed, 0x3a, 0xb0,
	0x00, 0x00, 0x00,
}
